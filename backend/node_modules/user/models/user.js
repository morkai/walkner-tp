// Part of <https://miracle.systems/p/walkner-tp> licensed under <CC BY-NC-SA 4.0>

'use strict';

const transliteration = require('transliteration');

exports.name = 'User';

exports.setUp = (app, mongoose) =>
{
  const userSchema = mongoose.Schema({
    login: {
      type: String,
      trim: true,
      required: true,
      unique: true
    },
    password: {
      type: String,
      trim: true,
      required: true
    },
    email: String,
    tel: String,
    symbol: String,
    privileges: [String],
    firstName: String,
    lastName: String,
    searchName: String
  }, {
    id: false,
    toJSON: {
      transform: function(alarm, ret)
      {
        delete ret.password;

        return ret;
      }
    }
  });

  userSchema.index({lastName: 1});
  userSchema.index({searchName: 1});
  userSchema.index({login: 1});
  userSchema.index({email: 1});
  userSchema.index({symbol: 1});
  userSchema.index({privileges: 1});

  userSchema.statics.TOPIC_PREFIX = 'users';

  userSchema.pre('save', function(next)
  {
    let searchName = (this.lastName || '') + (this.firstName || '');

    if (!searchName)
    {
      searchName = this.login;
    }

    this.searchName = userSchema.statics.transliterateName(searchName);

    next();
  });

  userSchema.statics.customizeLeanObject = function(leanModel)
  {
    if (leanModel)
    {
      delete leanModel.password;
    }

    return leanModel;
  };

  userSchema.statics.transliterateName = function(name)
  {
    return transliteration
      .transliterate(name, {unknown: '?'})
      .replace(/[^a-zA-Z0-9]+/g, '')
      .toUpperCase();
  };

  mongoose.model(exports.name, userSchema);
};
